Bash
 
• Bracket and Parentheses in Bash
   ◦ Brackets
      ◦ if [ condition ] # test condition
      ◦ if [[ condition ]] # bash buildin test condition
      ◦ arry[i] # array munipulation
      ◦ [a-z] # range of characters in a regular expression
   ◦ Curly Brackets
      ◦ ${variable} # parameter substitution
      ◦ ${!variable} # indirect variable reference
      ◦ { cmd1; cmd2;... ; cmdN } # block of code
      ◦ {string1, string2, ..., stringN} # brace expansion
      ◦ {a..z} # extended brace expansion
      ◦ {} # text replacement, after find and xargs
   ◦ Parentheses
      ◦ ( cmd1; cmd2; ..., cmdN ) # command group executed within a subshell
      ◦ array=(element1 element2 ... elementN) # array initialization
      ◦ result=$(cmd) # command substitution like ``
      ◦ >(cmd) # process substitution
      ◦ <(cmd) # process substitution
   ◦ Double Parentheses
      ◦ (( var=7 )) # integer arithmetic
      ◦ var=$(( 20 + 5 )) # integer arithmetic with variable assignment
      ◦ (( var++ )) (( var— )) # c-style variable increment/decrement
      ◦ (( var0 = var1 < 98 ? 9 : 21 )) # c-style trinary operation

                                     * * *

• SSH to a remote machine without a password
   ◦ Generate SSH key pairs on local machine
      ◦ Create .ssh dir in the $HOME: mkdir -p $HOME/.ssh
      ◦ Change .ssh permission: chmod 0700 $HOME/.ssh
      ◦ Generate key pairs using ssh key tool: ssh-keygen
         ▸ Follow the prompt
         ▸ This should result in two files: $HOME/.ssh/id_rsa and $HOME/.ssh/id_rsa.pub
      ◦ Copy public key to the remote machine: scp $HOME/.ssh/id_rsa.pub <user>@<remote>:<path>
   ◦ Append public key to the authorized keychain on remote machine
      ◦ Create .ssh dir on remote: mkdir -p $HOME/.ssh
      ◦ Change permission: chmod 0700 $HOME/.ssh
      ◦ Append uploaded public key to authorized_keys: cat <path>/id_ras.pub >> $HOME/.ssh/authorized_keys
      ◦ Change permission for authorized_keys: chmod 0600 $HOME./.ssh/authorized_keys
   ◦ SSH to the remote machine on local machine
      ◦ ssh -i $HOME/.ssh/.id_rsa <user>@<remote>
      ◦ An optional alias can be created for future shortcut: alias ssh<name>=’ssh -2 -x <user>@<remote>’

